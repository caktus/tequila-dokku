- when: dokku_do_upgrade is defined
  debug:
    msg: The dokku_do_upgrade variable is deprecated and no longer does anything.

- name: Install OS requirements
  # https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#os-requirements
  apt: name=apt-transport-https,ca-certificates,curl,software-properties-common

- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    id: "0EBFCD88"

- name: Set up docker's stable repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_lsb.codename }} stable"
    filename: docker
  register: docker_repo_update

- name: Add packagecloud's official GPG key
  apt_key:
    url: "https://packagecloud.io/gpg.key"
    id: "C2E73424D59097AB"

- name: Setup dokku's repository
  apt_repository:
    # http://dokku.viewdocs.io/dokku/getting-started/install/debian/
    repo: "deb https://packagecloud.io/dokku/dokku/ubuntu/ trusty main"
    filename: dokku
  register: dokku_repo_update

- name: Stop running dokku apps if dokku already installed
  shell: test -e /usr/bin/dokku && (dokku --quiet apps:list | xargs -L1 --no-run-if-empty dokku ps:stop) || true

- name: Unhold packages so we can install/upgrade them
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  with_items:
    - docker-ce
    - dokku

# Pre-configure dokku
# http://dokku.viewdocs.io/dokku/getting-started/install/debian/#unattended-installation

- name: "debconf dokku/vhost_enable"
  debconf:
    name: dokku
    question: dokku/vhost_enable
    value: "{{ dokku_vhost_enable }}"
    vtype: boolean

- name: "debconf dokku/web_config"
  debconf:
    name: dokku
    question: dokku/web_config
    value: "{{ dokku_web_config }}"
    vtype: boolean

- name: "debconf dokku/hostname"
  debconf:
    name: dokku
    question: dokku/hostname
    value: "{{ dokku_hostname }}"
    vtype: string

- name: "debconf dokku/skip_key_file"
  debconf:
    name: dokku
    question: dokku/skip_key_file
    value: "{{ dokku_skip_key_file }}"
    vtype: boolean

- name: "debconf dokku/key_file"
  debconf:
    name: dokku
    question: dokku/key_file
    value: "{{ dokku_key_file }}"
    vtype: string

- name: Install or upgrade docker-ce
  apt:
    name: docker-ce={{docker_version}}
    update_cache: "{{ docker_repo_update.changed }}"

- name: Install or upgrade dokku
  apt:
    name: dokku={{dokku_version}}
    update_cache: "{{ dokku_repo_update.changed}}"

- name: Install core plugins
  shell: dokku plugin:install-dependencies --core

- name: Install or update non-core plugins
  shell: >
    if test -d /var/lib/dokku/plugins/available/{{ item.name }} ;
    then
      if dokku plugin:update {{ item.name }}{% if item.version is defined %} {{ item.version }}{% endif %};
      then
          echo "UPDATE SUCCEEDED" ;
      else
          echo "UPDATE FAILED BUT IGNORING" ;  # Some updates report failure regardless (http-auth 0.4.0, logspout 0.4.0)... not sure why
      fi
    else
      dokku plugin:install {{ item.src }} {{ item.name }}{% if item.version is defined %} {{ item.version }}{% endif %}  || (echo "INSTALL FAILED"; exit 1);
    fi
  with_list: "{{ dokku_plugins }}"


### setup dokku users with tequila-common dev users ###

- name: Get current dokku users
  command: dokku ssh-keys:list
  changed_when: False
  register: dokku_ssh_users
  ignore_errors: true

- name: Add admin users to dokku
  shell: 'echo "{{ item.public_keys.0 }}" | dokku ssh-keys:add {{ item.name }}'
  when: dokku_ssh_users is defined and dokku_ssh_users.stdout.find(item.name) == -1
  with_items: "{{ users }}"

### Block sending unrecognized hostname requests to the first app
- name: remove any default server config
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default

- name: Block sending unrecognized hostname requests to the first app
  copy:
    src: 00-default-vhost.conf
    dest: /etc/nginx/conf.d/00-default-vhost.conf

# Unfortunately, dokku ps:restartall exits with an error if there are no apps.
- name: Restart all dokku apps
  command: dokku --quiet apps:list | xargs -L1 --no-run-if-empty dokku ps:restart

- name: Allow port 80 through firewall
  ufw: rule=allow port=http

- name: Allow port 443 through firewall
  ufw: rule=allow port=https

- name: Add dokku user to tequila-common groups
  user:
    name: dokku
    groups: admin,login
    append: yes

### Handy to have postgres client tools
- name: install postgres client
  apt:
    state: latest
    name: postgresql-client

### clean up ###

- name: Hold docker and dokku versions
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  with_items:
    - docker-ce
    - dokku
